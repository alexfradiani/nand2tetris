// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl
/**
 * Memory of 4K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // first dmux to select one of eight 512-RAM memories
    DMux8Way(in=load, sel=address[0..2], 
        a=load0, b=load1, c=load2, d=load3, e=load4, 
        f=load5, g=load6, h=load7);

    // send the last 9-bits of address to select within each ram 
    RAM512(in=in, load=load0, address=address[3..11], out=ram0out);
    RAM512(in=in, load=load1, address=address[3..11], out=ram1out);
    RAM512(in=in, load=load2, address=address[3..11], out=ram2out);
    RAM512(in=in, load=load3, address=address[3..11], out=ram3out);
    RAM512(in=in, load=load4, address=address[3..11], out=ram4out);
    RAM512(in=in, load=load5, address=address[3..11], out=ram5out);
    RAM512(in=in, load=load6, address=address[3..11], out=ram6out);
    RAM512(in=in, load=load7, address=address[3..11], out=ram7out);

    // converge into a single output
    Mux8Way16(a=ram0out, b=ram1out, c=ram2out, d=ram3out,
        e=ram4out, f=ram5out, g=ram6out, h=ram7out, 
        sel=address[0..2], out=out);
}
